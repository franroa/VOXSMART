name: "Terraform pipeline"
on:
  push:
    branches:
      - dev
    paths:
      - terraform/**
      - .github/workflows/terraform.yaml
  pull_request:
    branches:
      - dev
    paths:
      - terraform/**
env:
  # Credentials for deployment to AWS
  AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
  AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
  # S3 bucket for the Terraform state
  TF_BUCKET: ${{ secrets.TF_BUCKET}}
jobs:
  terraform:
    name: "Terraform pipeline"
    runs-on: ubuntu-latest
    defaults:
      run:
        shell: bash
        # We keep Terraform files in the terraform directory.
        working-directory: ./terraform
    steps:
      - name: Checkout the repository to the runner
        uses: actions/checkout@v2
      - name: Run Trivy vulnerability scanner in IaC mode
        uses: aquasecurity/trivy-action@master
        with:
          scan-type: 'config'
          hide-progress: false
          format: 'sarif'
          output: 'trivy-results.sarif'
          exit-code: '1'
          ignore-unfixed: true
          severity: 'CRITICAL,HIGH'
      - name: Upload Trivy scan results to GitHub Security tab
        uses: github/codeql-action/upload-sarif@v2
        with:
          sarif_file: 'trivy-results.sarif'
      - name: Setup Terraform with specified version on the runner
        uses: hashicorp/setup-terraform@v2
        with:
          terraform_version: 1.7.1
      - name: Terraform init
        id: init
        run: terraform init -backend-config="bucket=$TF_BUCKET"
      - name: Terraform format
        id: fmt
        run: terraform fmt -check
      - name: Terraform validate
        id: validate
        run: terraform validate
      - name: Terraform plan
        id: plan
        if: github.event_name == 'pull_request'
        run: terraform plan -no-color -input=false
        continue-on-error: true
      - name: Terraform Plan Status
        if: steps.plan.outcome == 'failure'
        run: exit 1
      # - name: Install Graphviz
      #   uses: tlylt/install-graphviz@v1
      # - name: Create diagram
      #   run: |
      #     terraform graph -type=plan | dot -Tpng >graph.png
      - name: Terraform Apply
        if: github.ref == 'refs/heads/main' && github.event_name == 'push'
        run: terraform apply -auto-approve -input=false
